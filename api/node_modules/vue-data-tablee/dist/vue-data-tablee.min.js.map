{"version":3,"file":"vue-data-tablee.min.js","sources":["../src/helpers/is.js","../src/helpers/validators.js","../node_modules/object-take/dist/object-take.js","../src/helpers/get.js","../src/mixins/Sortable.js","../src/mixins/Alignable.js","../src/mixins/Selectable.js"],"sourcesContent":["/**\n * Check value's constructor name.\n * @param {*} value\n * @param {string} constructor\n * @returns {boolean}\n */\nexport default (value, constructor) => {\n  const is = Object.prototype.toString.call(value) === `[object ${constructor}]`\n  return is\n}\n","import is from './is'\n\n/**\n * Creates a validator function that checks is value is included in values.\n * @param {Array} values\n * @returns {function(*):boolean}\n */\nconst includes = (values) => (value) => values.includes(value)\n\nconst ALIGNMENTS = ['right', 'left', 'center']\n\n/**\n * Checks if value is an alignment.\n */\nexport const isAlignment = includes(ALIGNMENTS)\n\n/**\n * Checks if value is a list of objects.\n * @param {*} value\n * @returns {boolean}\n */\nexport const isContent = (value) => {\n  const isObject = (value) => is(value, 'Object')\n  const isContent = is(value, 'Array') && value.every(isObject)\n  return isContent\n}\n","/*!\n * object-take v0.1.2\n * (c) 2018-present Vitor Luiz Cavalcanti <vitorluizc@outlook.com> (https://vitorluizc.github.io)\n * Released under the MIT License.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.objectTake = factory());\n}(this, (function () { 'use strict';\n\n    /**\n     * Take value from object using a string for path expression or return\n     * placeholder if value is undefined or unreachable.\n     * @example ```js\n     * take(object, 'data.users[0].contact.phones[0]');\n     * take(values, '[3].toString()', '0');\n     * ```\n     * @param object\n     * @param path - Path expression used to take value from object.\n     * @param placeholder - Returned when value is undefined or unreachable.\n     */\n    var take = function (object, path, placeholder) {\n      try {\n        var expression = 'return o' + (path[0] !== '[' ? '.' + path : path);\n        var value = new Function('o', expression)(object);\n        return value === undefined ? placeholder : value;\n      } catch (_) {\n        return placeholder;\n      }\n    };\n\n    return take;\n\n})));\n","import is from './is'\nimport get from 'object-take'\n\nconst DEFAULT_VALIDATE = (value) => !is(value, 'Null')\n\n/**\n * Get value from first object.\n * @param {string} name\n * @param {Deep[]} objects\n * @param {function(*):boolean} [validate]\n * @returns {*}\n */\nexport const getProperty = (name, objects, validate = DEFAULT_VALIDATE) => {\n  const properties = objects.map((object) => get(object, name))\n  const property = properties.find((property) => validate(property))\n  return property\n}\n\nexport default get\n","import is from '../helpers/is'\nimport get, { getProperty } from '../helpers/get'\n\n/**\n * Default sort function.\n * @param {(string|number)} a\n * @param {(string|number)} b\n * @returns {number}\n */\nconst DEFAULT_SORT = (a = '', b = '') => {\n  const isNumbers = is(a, 'Number') && is(b, 'Number')\n  if (isNumbers) {\n    return a - b\n  } else {\n    return String(a || '').localeCompare(String(b || ''))\n  }\n}\n\nconst Sortable = ({ cols = 'cols', rows = 'rows' } = {}) => ({\n  props: {\n    /**\n     * Defines if it sort and optionally define's default sort function.\n     */\n    sort: {\n      type: [Boolean, Function],\n      default: true\n    },\n\n    /**\n     * Defines if sort just emit events.\n     */\n    sortExternal: Boolean\n  },\n\n  data () {\n    return {\n      sorter: null,\n      sortment: 'ascending'\n    }\n  },\n\n  computed: {\n    $sortedRows () {\n      const isSorted = is(this.sorter, 'Number')\n      if (!isSorted || this.sortExternal) {\n        return [ ...this[rows] ]\n      }\n\n      const sorted = [ ...this[rows] ].sort((a, b) => this.$sort(a, b))\n      return sorted\n    }\n  },\n\n  methods: {\n    /**\n     * Check if column is sorting.\n     * @param {number} index\n     * @returns {boolean}\n     */\n    $isSorting (index) {\n      const isSorting = this.sorter === index\n      return isSorting\n    },\n\n    /**\n     * Check if a column is sortable.\n     * @param {number} index\n     * @returns {boolean}\n     */\n    $isSortable (index) {\n      const isSortable = !!this.$getSort(index)\n      return isSortable\n    },\n\n    /**\n     * Get column's sort setting.\n     * @param {number} index\n     * @returns {(boolean|function)}\n     */\n    $getSort (index) {\n      const col = this[cols][index]\n      const sort = getProperty('sort', [col, this._props])\n      return sort\n    },\n\n    /**\n     * Get column sort classes.\n     * @param {number} index\n     * @returns {(string|Array.<string, boolean>)[]}\n     */\n    $getSortClasses (index) {\n      const isSortable = this.$isSortable(index)\n      const isSorting = this.$isSorting(index)\n      const classes = {\n        '-sorting': isSorting,\n        '-sortable': isSortable,\n        '-unsortable': !isSortable,\n        ['-' + this.sortment]: isSorting\n      }\n      return classes\n    },\n\n    /**\n     * Get column arrow's.\n     * @param {number} index\n     * @returns {('▼'|'▲'|'')}\n     */\n    $getArrow (index) {\n      const isSorting = this.$isSorting(index)\n      if (!isSorting) return '▲'\n      const arrow = this.sortment === 'ascending' ? '▲' : '▼'\n      return arrow\n    },\n\n    /**\n     * Sort a column or change its sortment.\n     * @param {number} index\n     */\n    $setSorter (index) {\n      const isSorter = this.$isSorting(index)\n      const isSortable = this.$isSortable(index)\n\n      if (!isSortable) {\n        return\n      }\n\n      const column = this[cols][index]\n      const sortment = !isSorter || this.sortment === 'descending' ? 'ascending' : 'descending'\n      this.sortment = sortment\n      this.sorter = index\n      this.$emit('sort', { column, sortment })\n    },\n\n    /**\n     * Returns diference between values.\n     * This is the sort function.\n     * @param {object} rowA\n     * @param {object} rowB\n     * @returns {number}\n     */\n    $sort (rowA, rowB) {\n      const custom = this.$getSort(this.sorter)\n      const sort = is(custom, 'Function') ? custom : DEFAULT_SORT\n      const path = this[cols][this.sorter].field\n      const number = sort(get(rowA, path), get(rowB, path))\n      const result = number * (this.sortment === 'ascending' ? 1 : -1)\n      return result\n    }\n  }\n})\n\nexport default Sortable\n","import { getProperty } from '../helpers/get'\nimport { isAlignment } from '../helpers/validators'\n\nconst Alignable = ({ cols = 'cols' } = {}) => ({\n  props: {\n    /**\n     * Default cell's alignment.\n     */\n    align: {\n      type: String,\n      default: 'left',\n      validator: isAlignment\n    }\n  },\n  methods: {\n    /**\n     * Get column's alignment.\n     * @param {number} index\n     * @returns {('right'|'left'|'center')}\n     */\n    $getAlignment (index) {\n      const col = this[cols][index]\n      const alignment = getProperty('align', [col, this._props], isAlignment)\n      return alignment\n    }\n  }\n})\n\nexport default Alignable\n","const Selectable = ({ rows = 'rows' } = {}) => ({\n  props: {\n    selectable: Boolean\n  },\n\n  data () {\n    return {\n      selectedRows: [],\n      lastClicked: undefined\n    }\n  },\n\n  computed: {\n    isSelectedAll () {\n      const isNotEmpty = !!this[rows].length\n      const isEqualsLength = isNotEmpty && this[rows].length === this.selectedRows.length\n      const isSelectedAll = isEqualsLength && this[rows].every((row) => {\n        return this.selectedRows.includes(row)\n      })\n      return isSelectedAll\n    }\n  },\n\n  watch: {\n    rows () {\n      this.selectedRows = []\n    }\n  },\n\n  methods: {\n    /**\n     * Check if a row is selected.\n     * @param {object} row\n     * @returns {boolean}\n     */\n    isSelected (row) {\n      const isSelected = !!this.selectedRows.find((selected) => selected === row)\n      return isSelected\n    },\n\n    /**\n     * Set row active.\n     * @param {object} row\n     * @param {object} event\n     */\n    select (row, event) {\n      if (event.shiftKey && this.lastClicked !== row) {\n        this.multipleSelect(row)\n      } else {\n        this.selectedRows = this.isSelected(row)\n          ? this.selectedRows.filter((selected) => selected !== row)\n          : [ ...this.selectedRows, row ]\n      }\n      this.lastClicked = row\n      this.emitSelected()\n    },\n\n    /**\n     * Set multiple rows active.\n     * @param {object} row\n     */\n    multipleSelect (row) {\n      const s1 = this[rows].indexOf(row)\n      const s2 = this[rows].indexOf(this.lastClicked)\n      const [start, end] = [s1, s2].sort()\n      const range = Array(end - start + 1).fill().map((_, index) => start + index)\n      this.selectedRows = this[rows].filter((_, index) => range.includes(index))\n    },\n\n    /**\n     * Set all rows active.\n     * @param {Event} event\n     */\n    selectAll (event) {\n      this.selectedRows = this.isSelectedAll ? [] : [ ...this[rows] ]\n      this.emitSelected()\n    },\n\n    /**\n     * Emit selected rows.\n     */\n    emitSelected () {\n      this.$emit('select', this.selectedRows)\n    }\n  }\n})\n\nexport default Selectable\n"],"names":["value","constructor","Object","prototype","toString","call","values","module","object","path","placeholder","expression","Function","undefined","_","DEFAULT_VALIDATE","is","getProperty","name","objects","validate","map","get","find","property","isAlignment","includes","isContent","every","DEFAULT_SORT","a","b","String","localeCompare","ref","Boolean","this","sorter","sortExternal","rows","sort","$sort","index","$getSort","col","cols","_props","isSortable","$isSortable","isSorting","$isSorting","classes","sortment","isSorter","column","$emit","rowA","rowB","custom","field","isSelectedAll","length","selectedRows","row","isSelected","selected","event","shiftKey","lastClicked","multipleSelect","filter","emitSelected","indexOf","range","Array","end","start","fill"],"mappings":"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"}